2.1 - Caso de Uso:
Metodologia. El parametro que define el problema es el precio promedio, una vez obtenido, podemos comparar
todos los productos contra este valor y saber cuales estan por debajo. Para ello obtendremos el total de ventas
y lo dividiremos entre el total de productos vendidos. A partir de esto discriminamos los productos por precio
y mediante un contador llevamos el total de ellos.

function int productosMenoresPromedio(date mes, int productoId){
    int menoresPromedio = 0
    double ingresosTot = 0
    double ingresosProducto=0
    double precioPromedio = 0
    int contadorProducto = 0
    double promedioProducto = 0

    int contador = 0
    list claseFacturas facturas = new list claseFacturas()

     using (sqlcon connection = new sqlcon())
    {
        foreach facturasDB in facturasModeloBase{
           if(facturasDB.date.month() == mes)
           {
            facturas.monto = facturasDB.monto
            ...
            ingresosTot+=factura.monto*factura.factura.cantidad
            //Se puede tomar o no el iva, ya que afecta igual al proceso independiente de los articulos
            contador++
           }
        }

    }

    precioPromedio = ingresosTot/contador

     foreach factus in facturas{
        if(factus.date.month() == mes && factus.productoid == productoId){
            ingresosProducto+=factura.monto*factura.factura.cantidad
            contadorProducto++

        }
     }

     promedioProducto = ingresosProducto/contadorProducto
     ingresosProducto=0
     contadorProducto = 0

     if(promedioProducto<precioPromedio){
        menoresPromedio++
     }
     return menoresPromedio

}

2.2

Metodologia. Existen dos puntos basicos, manejar lo que se considera un aumento signiticativo en las ventas,
y obtener los valores de un historial para poder diferenciar en base a este vaor, cuales fueron los productos
que lo lograron. Vamos a considerar los ultimos 2 trimestres pasado como historial, porque enmarcan el pasado\
cercano mas significativo y el aumento lo vamos a poner en un 10%, en realidad puede llegar a tomar cualquier valor.

Usaremos una funcion muy parecida al de las ventas por los 2 ultimos aÃ±os, solo le haremos unos cambios, sacaremos
un promedio de los productos en estos dos trimestres y lo comparemos contra los actuales, tomando en cuenta el parametro.

function array Ventas(id.Producto){
    //en vez de usar year, definiremos periodos de 3 meses
    primerPeriodo = date.month.between(-8,-6)
    segundoPeriodo = date.month.between(-5,-3)
    //y en los if del foreach cambiamos los parametros para estos filtros
}

//usamos una funcion similar a la del caso anterior,solo especificamos un periodo en vez de un mes

 using (sqlcon connection = new sqlcon())
    {
        foreach facturasDB in facturasModeloBase{
           if(facturaDB.idProducto = id.Producto){ 
           if(facturasDB.date.periodo() == primerPeriodo)
           {
            facturas.monto = facturasDB.monto
            ...
            ingresosTot+=factura.monto*factura.factura.cantidad
            //Se puede tomar o no el iva, ya que afecta igual al proceso independiente de los articulos
            contador++
           }
        }}

    }

  //se emplea una funcion similar para el segundoPeriodo, y otra funcion muy similar para el periodo actual,
  // solo en vez de que entregue un arreglo seria un solo valor 

  //se toma un promedio de los dos periodos o se cambia el condicional del if para tomar ambos en cuenta
    
    funcion array obtainIdsProductos(){
        list int Productos = list int()
        //Se hace la conexion con entity y lo demas
        foreach products in Products{
            Productos = products.id
        }
        return Productos
    }
    //se realiza una funcion para obtener todos los productos y se emplea la funcion de ventas por periodo para 
    // obtener un cociente entre el actual y el de los trimestres pasados, si es mayor al 10% se considera significativo el cambios

    function list VentasTotales(array IdsProductos)
    {
        list double ventTot = new list int
        foreach ids in IdsProductos
            ventTot.add(Ventas(ids))

        return ventTot    
    }

    function int comparador(ventas1, ventas2, ventas3)
    {
        int contador = 0
        double razon = ventas3/((ventas1+ventas2)/2)
        if (razon>1.10)
            contador++

        return contador    
    }



  




